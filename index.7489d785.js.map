{"mappings":"AA2BA,MAAMA,EAAY,IA3BlB,MASEC,SAASC,GACP,OAAOC,MAAM,GAAGC,KAAKC,UAAUH,KAASI,MAAKC,GAAYA,EAASC,Q,CAEpEC,oBACE,OAAOL,KAAKH,SAASG,KAAKM,a,CAE5BC,gBACE,OAAOP,KAAKH,SAASG,KAAKQ,S,CAE5BC,sBAAsBC,GACpB,OAAOV,KAAKH,SAAS,GAAGG,KAAKW,mBAAmBD,I,CAElDE,cAAcC,GACZ,OAAOb,KAAKH,SAAS,GAAGG,KAAKc,WAAWD,I,CArB1CE,cACEf,KAAKC,QAAU,sCAEfD,KAAKM,aAAe,uBACpBN,KAAKQ,SAAW,mBAChBR,KAAKW,iBAAmB,4BACxBX,KAAKc,SAAW,S,GAuBpBlB,EAAUW,gBAQVX,EACGW,gBACAL,K,GAAKc,0BACHC,OAAMC,GAASC,QAAQC,IAAIF,KCrChC,MAAMG,EAAgBC,SAASC,KAAKC,cAAc,eAC5CC,EAAoBH,SAASE,cAAc,oBAoBjD,SAASE,EAAiBC,GAGxB,OAAOA,EAASC,QAAO,CAACC,EAAKC,IAC3BD,GAAO,4EAA0BC,EAAKC,cAAcD,EAAKC,sBAExD,G,CAKL,SAASC,EAAeC,GACtBR,EAAkBS,mBAAmB,YAAaD,E,CA5BlDlC,MADY,2DAETG,MAAKC,GAAYA,EAASC,SAC1BF,KAAKwB,GACLxB,KAAK8B,GAKVX,EAAcc,iBAAiB,SAE/B,SAA6BC,GAC3BA,EAAEC,iBACF,IAAIC,EAAYF,EAAEG,OAAOC,KACzBzC,MAAMuC,GAAWpC,MAAKC,GAAYA,EAASC,Q","sources":["src/js/fetchApi.js","src/js/categories.js"],"sourcesContent":["class FetchApiBooks {\n  constructor() {\n    this.baseUrl = 'https://books-backend.p.goit.global';\n\n    this.categoryList = '/books/category-list';\n    this.topBooks = '/books/top-books';\n    this.selectedCategory = '/books/category?category=';\n    this.bookInfo = '/books/';\n  }\n  fetchApi(param) {\n    return fetch(`${this.baseUrl}${param}`).then(response => response.json());\n  }\n  fetchCategoryList() {\n    return this.fetchApi(this.categoryList);\n  }\n  fetchTopBooks() {\n    return this.fetchApi(this.topBooks);\n  }\n  fetchSelectedCategory(category) {\n    return this.fetchApi(`${this.selectedCategory}${category}`);\n  }\n  fetchBookInfo(id) {\n    return this.fetchApi(`${this.bookInfo}${id}`);\n  }\n}\n\n//---------------- EXAMPLE -----------------------\nconst fetchList = new FetchApiBooks();\n\n// fetchList.fetchCategoryList();\nfetchList.fetchTopBooks();\n// fetchList.fetchSelectedCategory(\"Paperback Nonfiction\");\n// fetchList.fetchBookInfo(\"643282b1e85766588626a07f\");\n\n\n\nimport { enderBook, renderBestSellCategories } from './renderMarkup';\n\nfetchList\n  .fetchTopBooks()\n  .then(renderBestSellCategories)\n    .catch(error => console.log(error));\n  \n\n\n\n\n\n    \n\n  \n\n// function renderBook(book) {\n//   const { book_image, author, title } = book;\n\n//   return ` <li class=\"card\">\n//             <a>\n//                 <img src=\"${book_image}\" class=\"cardImg\">\n//                 <div class=\"titleContainer\">\n//                 <h2 class=\"cardTitle\">${title}</h2>\n//                 </div>\n//                 <p class=\"cardAuthor\">${author}</p>\n//             </a>\n//         </li> `;\n// }\n\n// function renderBestSellCategories(bestSellers) {\n//   const bestCategory = bestSellers.flatMap(bestSellCat => {\n//     const { list_name: listName, books } = bestSellCat;\n\n//     const fiveBooks = books.map(renderBook).join(' ');\n//     return `  <ul>\n//                 <h3 style=\"color: red\">${listName}</h3>\n//                 ${fiveBooks}\n//               </ul>`;\n//   });\n//   containerEl.innerHTML = bestCategory;\n// }\n\n\n","// import { markupCategories } from './markupCat.js';\n// import { createOnScreen } from './createOnScreen.js';\n// import { scrollIntoView } from \"scroll-js\";\n\nconst categoriesRef = document.body.querySelector('.categories');\nconst categoriesListRef = document.querySelector('.categories-list');\n\nfunction getCategories() {\n  const url = 'https://books-backend.p.goit.global/books/category-list';\n  fetch(url)\n    .then(response => response.json())\n    .then(markupCategories)\n    .then(createOnScreen);\n}\n\ngetCategories();\n\ncategoriesRef.addEventListener('click', onCategoryNameClick);\n\nfunction onCategoryNameClick(e) {\n  e.preventDefault();\n  let currenUrl = e.target.href;\n  fetch(currenUrl).then(response => response.json());\n}\n\nfunction markupCategories(catArray) {\n  const CAT_URL =\n    'https://books-backend.p.goit.global/books/category?category=';\n  return catArray.reduce((acc, item) => {\n    acc += `<li><a href=\"${CAT_URL}${item.list_name}\">${item.list_name}</a></li>`;\n    return acc;\n  }, '');\n}\n\n\n\nfunction createOnScreen(data) {\n  categoriesListRef.insertAdjacentHTML('beforeend', data);\n}\n"],"names":["$7347181ddf74d6b0$var$fetchList","fetchApi","param","fetch","this","baseUrl","then","response","json","fetchCategoryList","categoryList","fetchTopBooks","topBooks","fetchSelectedCategory","category","selectedCategory","fetchBookInfo","id","bookInfo","constructor","renderBestSellCategories","catch","error","console","log","$f3b06000f9b46fbb$var$categoriesRef","document","body","querySelector","$f3b06000f9b46fbb$var$categoriesListRef","$f3b06000f9b46fbb$var$markupCategories","catArray","reduce","acc","item","list_name","$f3b06000f9b46fbb$var$createOnScreen","data","insertAdjacentHTML","addEventListener","e","preventDefault","currenUrl","target","href"],"version":3,"file":"index.7489d785.js.map"}